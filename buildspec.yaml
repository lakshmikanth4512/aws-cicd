version: 0.2

phases:
  install:
    commands:
      - echo "Installing dependencies if needed..."
      # Add installation commands here if required
  pre_build:
    commands:
      - echo "Starting Maven build (skip tests)..."
      - mvn clean install -DskipTests
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - REPOSITORY_URI=301984890704.dkr.ecr.ap-south-1.amazonaws.com/test-codepipeline-ecr-repo
      - echo "Logging in to ECR registry $REPOSITORY_URI"
      - $(aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $REPOSITORY_URI)
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo "Build started on `date`"
      - echo "Building the Docker image with tag $IMAGE_TAG..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo "Build completed on `date`"
      - echo "Pushing Docker images to ECR..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - DOCKER_CONTAINER_NAME=test-codepipeline-ecr-repo
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo "imagedefinitions.json contents:"
      - cat imagedefinitions.json

cache:
  paths:
    - '/root/.m2/**/*'  # Cache Maven dependencies for faster builds

artifacts:
  files:
    - imagedefinitions.json
    - target/course-service.jar  # Your built JAR artifact
